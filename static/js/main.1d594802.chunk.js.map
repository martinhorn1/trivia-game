{"version":3,"sources":["App.js","index.js"],"names":["App","useState","items","setItems","answers","setAnswers","clickable","setClickable","count","setCount","correct","setCorrect","wrong","setWrong","nextQuestion","useEffect","fetch","then","res","json","results","document","querySelectorAll","map","elem","style","display","undefined","incorrect_answers","concat","correct_answer","i","length","j","Math","floor","random","getElementsByClassName","filter","innerHTML","backgroundColor","item","className","key","uuidv4","he","decode","question","option","onClick","selected","ReactDOM","render","getElementById"],"mappings":"6PAqFeA,MAjFf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGNG,EAHM,KAGGC,EAHH,OAIqBJ,oBAAS,GAJ9B,mBAINK,EAJM,KAIKC,EAJL,OAKaN,mBAAS,GALtB,mBAKNO,EALM,KAKCC,EALD,OAMiBR,mBAAS,GAN1B,mBAMNS,EANM,KAMGC,EANH,OAOaV,mBAAS,GAPtB,mBAONW,EAPM,KAOCC,EAPD,KAuCb,SAASC,IACPL,EAASD,EAAQ,GACjBD,GAAa,GAaf,OA3CAQ,qBAAU,WACRC,MAHe,wCAIZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIhB,EAASgB,EAAKC,cAC7B,CAACZ,IAEJO,qBAAU,WACR,YAAIM,SAASC,iBAAiB,kCAAkCC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAMC,QAAU,aAChG,CAAChB,EAASE,IAEbG,qBAAU,WACR,QAAiBY,IAAbzB,EAAM,GAAkB,CAE1B,IADA,IAAIE,EAAUF,EAAM,GAAG0B,kBAAkBC,OAAO3B,EAAM,GAAG4B,gBAChDC,EAAI3B,EAAQ4B,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC3C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADG,EAEhB,CAAC3B,EAAQ6B,GAAI7B,EAAQ2B,IAA/C3B,EAAQ2B,GAFkC,KAE9B3B,EAAQ6B,GAFsB,KAI7C5B,EAAWD,MAEZ,CAACF,IAEJa,qBAAU,WACHT,IACkB,YAAIe,SAASgB,uBAAuB,eAAeC,QAAO,SAAAd,GAAI,OAAIA,EAAKe,YAAcrC,EAAM,GAAG4B,kBAAgB,GACpHL,MAAMe,gBAAkB,UAExC,CAACtC,EAAOI,IAkBT,oCACGJ,EAAMqB,KAAI,SAAAkB,GACT,OAAO,yBAAKC,UAAU,UAAUC,IAAKC,gBACnC,yBAAKF,UAAU,SAAf,mBAAwClC,GACxC,iDAAuBE,GACvB,+CAAqBE,GACrB,yBAAK8B,UAAU,YAAYG,IAAGC,OAAOL,EAAKM,WAE1C,yBAAKL,UAAU,iBACZtC,EAAQmB,KAAI,SAAAyB,GACX,OAAO,yBAAKN,UAAU,aAAaO,QAAS,kBAAM3C,GArBzC4C,EAqBiEF,EApBpFzC,GAAa,QACTL,EAAM,GAAG4B,iBAAmBoB,EAC9BvC,EAAWD,EAAU,GAGrBG,EAASD,EAAQ,KAe2E,KArBhG,IAAqBsC,GAqBiFP,IAAKC,gBAAWC,IAAGC,OAAOE,QAIxH,yBAAKN,UAAU,eACb,gDAAsBG,IAAGC,OAAOL,EAAKX,kBAEvC,yBAAKY,UAAU,kBACb,yBAAKO,QAASnC,GAAd,wBCxEZqC,IAASC,OAAO,kBAAC,EAAD,MAAS/B,SAASgC,eAAe,W","file":"static/js/main.1d594802.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport he from 'he';\n\nfunction App() {\n\n  const [items, setItems] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [clickable, setClickable] = useState(true);\n  const [count, setCount] = useState(1);\n  const [correct, setCorrect] = useState(0);\n  const [wrong, setWrong] = useState(0);\n\n  const BASE_URL = 'https://opentdb.com/api.php?amount=1'\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(json => setItems(json.results))\n  }, [count]);\n  \n  useEffect(() => {\n    [...document.querySelectorAll(\".correct-ans, .next-container\")].map(elem => elem.style.display = \"block\");\n  }, [correct, wrong]);\n  \n  useEffect(() => {\n    if (items[0] !== undefined) {\n      var answers = items[0].incorrect_answers.concat(items[0].correct_answer);\n      for (let i = answers.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [answers[i], answers[j]] = [answers[j], answers[i]];\n      }\n      setAnswers(answers);\n    }\n  }, [items]);\n\n  useEffect(() => {\n    if (!clickable) {\n      var correct_answer = [...document.getElementsByClassName('option-btn')].filter(elem => elem.innerHTML === items[0].correct_answer)[0];\n      correct_answer.style.backgroundColor = \"#0d0\";\n    }\n  }, [items, clickable]);\n\n  function nextQuestion() {\n    setCount(count + 1);\n    setClickable(true);\n  }\n  \n  function showCorrect(selected) {\n    setClickable(false);\n    if (items[0].correct_answer === selected) {\n      setCorrect(correct + 1);\n    }\n    else {\n      setWrong(wrong + 1);\n    }\n  }\n\n  return (\n    <>\n      {items.map(item => {\n        return <div className=\"content\" key={uuidv4()}>\n          <div className=\"q-num\">Question number {count}</div>\n          <div>Correct answers: {correct}</div>\n          <div>Wrong answers: {wrong}</div>\n          <div className=\"question\">{he.decode(item.question)}</div>\n\n          <div className=\"options-group\">\n            {answers.map(option => {\n              return <div className=\"option-btn\" onClick={() => clickable ? showCorrect(option) : null} key={uuidv4()}>{he.decode(option)}</div>\n            })}\n          </div>\n          \n          <div className=\"correct-ans\">\n            <div>Correct answer: {he.decode(item.correct_answer)}</div>\n          </div>\n          <div className=\"next-container\">\n            <div onClick={nextQuestion}>Next Question</div>\n          </div>\n        </div>\n      })}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}