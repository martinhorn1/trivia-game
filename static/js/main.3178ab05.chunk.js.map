{"version":3,"sources":["Question/questionText.js","Question/answer.js","App.js","index.js"],"names":["Question","props","he","decode","text","Answer","answer","App","error","setError","useState","isLoaded","setIsLoaded","items","setItems","answers","setAnswers","clickable","setClickable","count","setCount","correct","setCorrect","wrong","setWrong","nextQuestion","useEffect","fetch","then","res","json","results","document","querySelectorAll","map","elem","style","display","undefined","incorrect_answers","correct_answer","array","sortedArr","i","length","j","Math","floor","random","shuffle","getElementsByClassName","filter","innerHTML","backgroundColor","React","createElement","data-testid","message","Fragment","item","className","key","uuidv4","onClick","QuestionText","question","option","selected","ReactLoading","type","color","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3178ab05.chunk.js","sourcesContent":["import he from 'he';\r\n\r\nfunction Question(props) {\r\n    return he.decode(props.text);\r\n}\r\n\r\nexport default Question;","import he from 'he';\r\n\r\nfunction Answer(props) {\r\n    return he.decode(props.answer);\r\n}\r\n\r\nexport default Answer;","import React, { useState, useEffect } from 'react';\nimport ReactLoading from 'react-loading';\nimport { v4 as uuidv4 } from 'uuid';\nimport he from 'he';\nimport QuestionText from './Question/questionText';\nimport Answer from './Question/answer';\n\nfunction App() {\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [clickable, setClickable] = useState(true);\n  const [count, setCount] = useState(1);\n  const [correct, setCorrect] = useState(0);\n  const [wrong, setWrong] = useState(0);\n\n  const BASE_URL = 'https://opentdb.com/api.php?amount=1'\n  \n  const shuffle = (array) => {\n    const sortedArr = array;\n    for (let i = sortedArr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [sortedArr[i], sortedArr[j]] = [sortedArr[j], sortedArr[i]];\n    }\n    return sortedArr;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(json => {\n        setIsLoaded(true);\n        setItems(json.results)\n      },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [count]);\n  \n  useEffect(() => {\n    [...document.querySelectorAll(\".correct-ans, .next-container\")].map(elem => elem.style.display = \"block\");\n  }, [correct, wrong]);\n  \n  useEffect(() => {\n    if (items[0] !== undefined) {\n      var answers = [...items[0].incorrect_answers, items[0].correct_answer];\n      setAnswers(() => shuffle([...answers]));\n    }\n  }, [items]);\n\n  useEffect(() => {\n    if (!clickable) {\n      var correct_answer = [...document.getElementsByClassName('option-btn')].filter(elem => elem.innerHTML === items[0].correct_answer)[0];\n      correct_answer.style.backgroundColor = \"#0d0\";\n    }\n  }, [items, clickable]);\n\n  function nextQuestion() {\n    setCount(count + 1);\n    setClickable(true);\n    setIsLoaded(false);\n  }\n  \n  function showCorrect(selected) {\n    setClickable(false);\n    if (items[0].correct_answer === selected) {\n      setCorrect(correct + 1);\n    }\n    else {\n      setWrong(wrong + 1);\n    }\n  }\n\n  function resetResults() {\n    setCount(1);\n    setCorrect(0);\n    setWrong(0);\n  }\n\n  if (error) {\n    return <div data-testid=\"error\">Error: {error.message}</div>\n  }\n  else if (!isLoaded) {\n    return <ReactLoading data-testid=\"spinner\" type=\"spin\" color=\"#f50\" />\n  }\n  else return (\n    <>\n      {items.map(item => {\n        return <div className=\"content\" data-testid=\"content\" key={uuidv4()}>\n          <div className=\"reset\" onClick={() => resetResults()}>Reset</div>\n          <div className=\"q-num\">Question number {count}</div>\n          <div>Correct answers: {correct}</div>\n          <div>Wrong answers: {wrong}</div>\n          <div className=\"question\">\n            <QuestionText text={item.question} />\n          </div>\n\n          <div className=\"options-group\">\n            {answers.map(option => {\n              return <div className=\"option-btn\" onClick={() => clickable ? showCorrect(option) : null} key={uuidv4()}>\n                <Answer answer={option} />\n              </div>\n            })}\n          </div>\n          \n          <div className=\"correct-ans\">\n            <div>Correct answer: {he.decode(item.correct_answer)}</div>\n          </div>\n          <div className=\"next-container\">\n            <div onClick={nextQuestion}>Next Question</div>\n          </div>\n        </div>\n      })}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}